<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationName" xml:space="preserve">
    <value>Woopiti</value>
  </data>
  <data name="BackLabel" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="CancelLabel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ClearSelectionLabel" xml:space="preserve">
    <value>Clear selection</value>
  </data>
  <data name="ConnectMessage" xml:space="preserve">
    <value>Please select one of the accounts below to see and manage your files.</value>
  </data>
  <data name="HomeLabel" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HowItWorksLabel" xml:space="preserve">
    <value>How it works?</value>
  </data>
  <data name="HowItWorksMessage" xml:space="preserve">
    <value>Woopiti asks for access for each of the cloud storage services and social networks you want to add. 
If the service provides a web site to authenticate, you will be directed to it, where you must login and conseder permissions to this application to access your information. After this process Woopiti gets and save an access token which you can revoke at any time in the service site.
If the service do not have a website to authenticate the user and password are requested and stored locally.
In all cases, both access tokens and passwords are encrypted and stored securely.</value>
  </data>
  <data name="ListModeMessage" xml:space="preserve">
    <value>Switch to list mode</value>
  </data>
  <data name="LoadingDataError" xml:space="preserve">
    <value>There was an error when loading the data.</value>
  </data>
  <data name="NoLabel" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OfflineModeMessage" xml:space="preserve">
    <value>Woopiti will start in offline mode because Internet service is not available. 
You can return to online mode from the main menu at any time.</value>
  </data>
  <data name="OKLabel" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OpenContainingFolderLabel" xml:space="preserve">
    <value>Open containing folder</value>
  </data>
  <data name="OpenFileError" xml:space="preserve">
    <value>File could not be opened.</value>
  </data>
  <data name="RateAndReviewLabel" xml:space="preserve">
    <value>Rate and Review</value>
  </data>
  <data name="SelectedItemMessage" xml:space="preserve">
    <value>{0} selected</value>
  </data>
  <data name="SelectedItemsMessage" xml:space="preserve">
    <value>{0} selected</value>
  </data>
  <data name="SelectLabel" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="ShareErrorMessage" xml:space="preserve">
    <value>There was a problem trying to share the file.</value>
  </data>
  <data name="TilesModeMessage" xml:space="preserve">
    <value>Switch to tiles mode</value>
  </data>
  <data name="UnselectLabel" xml:space="preserve">
    <value>Unselect</value>
  </data>
  <data name="YesLabel" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="RateAppQuestion" xml:space="preserve">
    <value>Would you like to rate this app?</value>
  </data>
  <data name="PresentationMessage" xml:space="preserve">
    <value>Woopiti allows you to link your accounts and see all your files in one place</value>
  </data>
  <data name="ManualLabel" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="AutomaticLabel" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="AutomaticMessage" xml:space="preserve">
    <value>Set up accounts automatically from the information in the device</value>
  </data>
  <data name="PhoneLabel" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="SelectAppLabel" xml:space="preserve">
    <value>Select application</value>
  </data>
  <data name="RemoveAdsLabel" xml:space="preserve">
    <value>Remove advertising</value>
  </data>
  <data name="SizeProgressMessage" xml:space="preserve">
    <value>{0} of {1}</value>
  </data>
  <data name="AvailableUpdatesMessage" xml:space="preserve">
    <value>There are available updates.</value>
  </data>
  <data name="CheckingForUpdatesMessage" xml:space="preserve">
    <value>Checking for updates...</value>
  </data>
  <data name="InstallingUpdatesMessage" xml:space="preserve">
    <value>Installing updates...</value>
  </data>
  <data name="InstallUpdatesFailedMessage" xml:space="preserve">
    <value>The installation of the udpates failed.</value>
  </data>
  <data name="MandatoryUpdatesMessage" xml:space="preserve">
    <value>The app must be updated before continuing.</value>
  </data>
  <data name="SkipLabel" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="UpdateLabel" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="DownloadingUpdatesMessage" xml:space="preserve">
    <value>Downloading updates {0:P0}...</value>
  </data>
  <data name="EnableNotificationsMessage" xml:space="preserve">
    <value>Notifications must be enabled to proceed. Please change the notificaton settings of your device.</value>
  </data>
  <data name="SortByDateAscLabel" xml:space="preserve">
    <value>Oldest</value>
  </data>
  <data name="SortByDateDescLabel" xml:space="preserve">
    <value>Newest</value>
  </data>
  <data name="SortByNameAscLabel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SortByNameDescLabel" xml:space="preserve">
    <value>Name descending</value>
  </data>
  <data name="SortBySizeAscLabel" xml:space="preserve">
    <value>Smallest</value>
  </data>
  <data name="SortBySizeDescLabel" xml:space="preserve">
    <value>Biggest</value>
  </data>
  <data name="SortLabel" xml:space="preserve">
    <value>Sort</value>
  </data>
</root>